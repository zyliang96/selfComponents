(self.webpackChunkselfcomponents=self.webpackChunkselfcomponents||[]).push([[787,583,944,192,723,809],{51787:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>w});var r=t(29036),s=t.n(r),a=t(43745),i=(t(9944),t(74701)),o=t.n(i),l=t(51956),c=t(68723),d=t(97524),u=t(93379),f=t.n(u),m=t(3157);f()(m.Z,{insert:"head",singleton:!1}),m.Z.locals,t(82679);var p=t(37838),h=t.n(p);h().configure({tabReplace:"  ",classPrefix:"hljs-",languages:["CSS","HTML, XML","JavaScript","PHP","Python","Stylus","TypeScript","Markdown"]}),d.default.setOptions({highlight:function(e){return h().highlightAuto(e).value}});var b=new d.default.Renderer;b.table=function(e,n){return'<table class="grid"><thead>'.concat(e,"</thead><tbody>").concat(n,"</tbody></table>")};var y=b.link;function g(e){return function(n){return a.default.createElement("div",{className:"mark-down",dangerouslySetInnerHTML:{__html:(0,d.default)(e,{renderer:b})}})}}b.link=function(e,n,t){return y.call(b,e,n,t).replace(/^<a /,'<a target="_blank" ')};var v=c.default.articleList.length;const w=function(e){var n=(0,a.useState)((function(){return o().parse(window.location.href.split("?")[1]).id})),t=s()(n,2),r=t[0],i=(t[1],(0,a.useState)(null)),d=s()(i,2),u=d[0],f=d[1],m=(0,a.useRef)(null),p=(0,a.useRef)(null),h=(0,a.useRef)(!1);return(0,a.useEffect)((function(){if(r){if(h.current=!1,p.current=null,Array.isArray(c.default.articleList)){for(var e=null,n=0;n<v;n++){var t=c.default.articleList[n];t.key===r&&(m.current=a.default.createElement(g(t.detail.default)),e=t)}f(e)}}else{if(p.current)return;h.current=!0,p.current=setTimeout((function(){h.current&&l.Z.back()}),800)}}),[r]),u&&a.default.createElement("div",{className:"blog-detail-box"},a.default.createElement("div",{className:"baseInfo"},a.default.createElement("div",{className:"title"},a.default.createElement("span",null,u.title)),a.default.createElement("div",{className:"time"},a.default.createElement("span",null,u.time)),a.default.createElement("div",{className:"classify"},Array.isArray(u.classify)&&u.classify.map((function(e){return a.default.createElement("span",{className:"classify-item",key:e},e)}))),a.default.createElement("div",{className:"description"},a.default.createElement("span",null,u.description))),a.default.createElement("div",{className:"content"},m.current))}},68723:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>u});var r=t(87809),s=[{title:"测试文章",description:"这是文章的描述",time:"2021-03-24",classify:[r.ArticleClassifyEnum.javaScript,r.ArticleClassifyEnum.css],key:"test_article",type:r.MenuTypeEnum.article,detail:t(27583)},{title:"测试专栏",description:"这是专栏的描述",time:"2021-03-24",classify:[r.ArticleClassifyEnum.javaScript,r.ArticleClassifyEnum.css],key:"test_column",type:r.MenuTypeEnum.column,children:[{title:"测试文章",description:"这是文章的描述",time:"2021-03-24",classify:[r.ArticleClassifyEnum.javaScript,r.ArticleClassifyEnum.css],key:"test_column_one",type:r.MenuTypeEnum.article,detail:t(51192)}]}],a=[],i=[],o=[],l=[];function c(e){return e.sort((function(e,n){return new Date(e.time).getTime()-new Date(n.time).getTime()}))}!function e(n){Array.isArray(n)&&n.forEach((function(n){switch(n.type){case r.MenuTypeEnum.article:a.push(n);break;case r.MenuTypeEnum.column:i.push(n)}Array.isArray(n.classify)&&n.classify.forEach((function(e){var n=o.indexOf(e);n<0?(o.push(e),l.push(0)):l[n]++})),Array.isArray(n.children)&&e(n.children)}))}(s);var d=[{type:r.MenuTypeEnum.article,name:"文章"},{type:r.MenuTypeEnum.column,name:"专栏"}];const u={articleList:c(a),columnList:c(i),classifyList:o,classifyTotalList:l,menuList:d}},87809:(e,n,t)=>{"use strict";var r,s;t.r(n),t.d(n,{MenuTypeEnum:()=>r,ArticleClassifyEnum:()=>s}),function(e){e.article="article",e.column="column"}(r||(r={})),function(e){e.javaScript="javaScript",e.css="css",e.html="html",e.node="node",e.webpack="webpack",e.compilers="编译原理",e.dataStructure="数据结构"}(s||(s={}))},3157:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var r=t(86043),s=t.n(r)()((function(e){return e[1]}));s.push([e.id,".mark-down code {\n  margin: 0 1px;\n  padding: 0.2em 0.4em;\n  font-size: 0.9em;\n  background: #f2f4f5;\n  border-radius: 3px;\n}\n.mark-down p {\n  margin: 1em 0;\n  font-size: 14px;\n  color: #5e6d82;\n}\n.mark-down h2 {\n  font-size: 28px;\n  color: #1f2d3d;\n  margin: 0;\n}\n.mark-down h3 {\n  font-size: 22px;\n  margin: 45px 0 15px;\n}\n.mark-down h2,\n.mark-down h3,\n.mark-down h4,\n.mark-down h5 {\n  font-weight: normal;\n  color: #1f2f3d;\n}\n.mark-down pre {\n  padding: 12px 10px 14px;\n  border: 1px solid #ddd;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  background: #EFF2F7;\n}\n.mark-down table.grid {\n  border-collapse: collapse;\n  width: 100%;\n  background-color: #fff;\n  color: #5e6d82;\n  font-size: 14px;\n  margin-bottom: 45px;\n  line-height: 1.5em;\n}\n.mark-down table.grid strong {\n  font-weight: normal;\n}\n.mark-down table.grid th {\n  text-align: left;\n  border-top: 1px solid #eaeefb;\n  background-color: #EFF2F7;\n  white-space: nowrap;\n}\n.mark-down table.grid td,\n.mark-down table.grid th {\n  border-bottom: 1px solid #eaeefb;\n  padding: 10px;\n  max-width: 250px;\n}\n.mark-down table.grid th:first-child,\n.mark-down table.grid td:first-child {\n  padding-left: 10px;\n}\n",""]);const a=s},3772:(e,n,t)=>{"use strict";t.d(n,{Z:()=>a});var r=t(86043),s=t.n(r)()((function(e){return e[1]}));s.push([e.id,"",""]);const a=s},27583:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>r});const r="## Button 按钮\r\n\r\nDisplays important alert messages.\r\n\r\n### Basic usage\r\n\r\n\r\n![测试](/images/noExpert.png)\r\n\r\nAlert components are non-overlay elements in the page that does not disappear automatically.\r\n\r\n:::demo Alert provides 4 types of themes defined by `type`, whose default value is `info`.\r\n\r\n```js\r\nfunction ChooseSeatDemo(props) {\r\n    console.log(11111)\r\n}\r\n```\r\n\r\n:::\r\n\r\n### Theme\r\n\r\nAlert provide two different themes, `light` and `dark`.\r\n\r\n:::demo Set `effect` to change theme, default is `light`.\r\n\r\n```js\r\nfunction ChooseSeatDemo(props) {\r\n    const [visible, setVisible] = React.useState(false);\r\n\r\n    const handlePassRoomSeat = (arr) => {\r\n        console.log(arr);\r\n        setVisible(false);\r\n    };\r\n    const handleHideModal = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>测试问题</div>\r\n        </div>\r\n    );\r\n}\r\n```\r\n\r\n:::\r\n\r\n### Customizable close button\r\n\r\nCustomize the close button as texts or other symbols.\r\n\r\n:::demo Alert allows you to configure if it's closable. The close button text and closing callbacks are also customizable. `closable` attribute decides if the component can be closed or not. It accepts `boolean`, and the default is `true`. You can set `close-text` attribute to replace the default cross symbol as the close button. Be careful that `close-text` must be a string. `close` event fires when the component is closed.\r\n\r\n```js\r\nfunction ChooseSeatDemo(props) {\r\n    const [visible, setVisible] = React.useState(false);\r\n\r\n    const handlePassRoomSeat = (arr) => {\r\n        console.log(arr);\r\n        setVisible(false);\r\n    };\r\n    const handleHideModal = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>测试问题</div>\r\n        </div>\r\n    );\r\n}\r\n```\r\n\r\n:::\r\n\r\n### With icon\r\n\r\nDisplaying an icon improves readability.\r\n\r\n:::demo Setting the `show-icon` attribute displays an icon that corresponds with the current Alert type.\r\n\r\n```js\r\nfunction ChooseSeatDemo(props) {\r\n    const [visible, setVisible] = React.useState(false);\r\n\r\n    const handlePassRoomSeat = (arr) => {\r\n        console.log(arr);\r\n        setVisible(false);\r\n    };\r\n    const handleHideModal = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>测试问题</div>\r\n        </div>\r\n    );\r\n}\r\n```\r\n\r\n:::\r\n\r\n## Centered text\r\n\r\nUse the `center` attribute to center the text.\r\n\r\n:::demo\r\n\r\n```js\r\nfunction ChooseSeatDemo(props) {\r\n    const [visible, setVisible] = React.useState(false);\r\n\r\n    const handlePassRoomSeat = (arr) => {\r\n        console.log(arr);\r\n        setVisible(false);\r\n    };\r\n    const handleHideModal = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>测试问题</div>\r\n        </div>\r\n    );\r\n}\r\n```\r\n\r\n:::\r\n\r\n### With description\r\n\r\nDescription includes a message with more detailed information.\r\n\r\n:::demo Besides the required `title` attribute, you can add a `description` attribute to help you describe the alert with more details. Description can only store text string, and it will word wrap automatically.\r\n\r\n```js\r\nfunction ChooseSeatDemo(props) {\r\n    const [visible, setVisible] = React.useState(false);\r\n\r\n    const handlePassRoomSeat = (arr) => {\r\n        console.log(arr);\r\n        setVisible(false);\r\n    };\r\n    const handleHideModal = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>测试问题</div>\r\n        </div>\r\n    );\r\n}\r\n```\r\n\r\n:::\r\n\r\n### With icon and description\r\n\r\n:::demo At last, this is an example with both icon and description.\r\n\r\n```js\r\nfunction ChooseSeatDemo(props) {\r\n    const [visible, setVisible] = React.useState(false);\r\n\r\n    const handlePassRoomSeat = (arr) => {\r\n        console.log(arr);\r\n        setVisible(false);\r\n    };\r\n    const handleHideModal = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>测试问题</div>\r\n        </div>\r\n    );\r\n}\r\n```\r\n\r\n:::\r\n\r\n### Attributes\r\n\r\n| Attribute   | Description                                                | Type    | Accepted Values            | Default |\r\n| ----------- | ---------------------------------------------------------- | ------- | -------------------------- | ------- |\r\n| title       | title                                                      | string  | —                          | —       |\r\n| type        | Component type                                             | string  | success/warning/info/error | info    |\r\n| description | Descriptive text. Can also be passed with the default slot | string  | —                          | —       |\r\n| closable    | If closable or not                                         | boolean | —                          | true    |\r\n| center      | Whether to center the text                                 | boolean | —                          | false   |\r\n| close-text  | Customized close button text                               | string  | —                          | —       |\r\n| show-icon   | If a type icon is displayed                                | boolean | —                          | false   |\r\n| effect      | Choose theme                                               | string  | light/dark                 | light   |\r\n\r\n### Slot\r\n\r\n| Name  | Description                |\r\n| ----- | -------------------------- |\r\n| —     | description                |\r\n| title | content of the Alert title |\r\n\r\n### Events\r\n\r\n| Event Name | Description                | Parameters |\r\n| ---------- | -------------------------- | ---------- |\r\n| close      | fires when alert is closed | —          |\r\n"},51192:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>r});const r=""},9944:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});var r=t(93379),s=t.n(r),a=t(3772);s()(a.Z,{insert:"head",singleton:!1});const i=a.Z.locals||{}}}]);
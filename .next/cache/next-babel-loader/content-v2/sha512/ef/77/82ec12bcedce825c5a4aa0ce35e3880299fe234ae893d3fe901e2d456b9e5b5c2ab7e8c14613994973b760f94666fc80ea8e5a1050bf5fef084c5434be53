{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./index.less\";\nimport menuList from \"./menuConfig\";\nimport { MenuTypeEnum } from \"./type\";\nimport classnames from \"classnames\";\nimport history from \"../../../history\"; //处理菜单\n\nvar route = [];\nvar firstMenuItem = null;\n\nvar addRoute = function addRoute(menu, parentMenu) {\n  var type = \"\";\n\n  if (menu.name) {\n    if (!parentMenu) {\n      type = MenuTypeEnum.groupName;\n    } else if (Array.isArray(menu.children) && menu.children.length > 0) {\n      type = MenuTypeEnum.groupTypeName;\n    } else {\n      type = MenuTypeEnum.name;\n    }\n\n    var menuItemData = {\n      type: type,\n      name: menu.name,\n      path: menu.path,\n      component: menu.component\n    };\n\n    if (type === MenuTypeEnum.name && !firstMenuItem && menu.component && menu.path) {\n      firstMenuItem = menuItemData;\n    }\n\n    route.push(menuItemData);\n  }\n\n  if (Array.isArray(menu.children) && menu.children.length > 0) {\n    menu.children.forEach(function (item) {\n      addRoute(item, menu);\n    });\n  }\n};\n\nArray.isArray(menuList) && menuList.forEach(function (menu) {\n  addRoute(menu, null);\n});\n\nfunction Component(props) {\n  _s();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentMenuPath = _useState2[0],\n      setCurrentMenuPath = _useState2[1]; // 当前菜单Path\n\n\n  var currentComponentRef = useRef(null); // 具体菜单的样式\n\n  var menuItemClassName = function menuItemClassName(item) {\n    var _classnames;\n\n    var type = item.type,\n        path = item.path;\n    return classnames(\"menu-item\", (_classnames = {}, _defineProperty(_classnames, \"menu-item-\".concat(type), type), _defineProperty(_classnames, \"menu-item-click\", path), _defineProperty(_classnames, \"menu-item-current\", path === currentMenuPath), _classnames));\n  };\n\n  var selectMenu = function selectMenu(e, menu) {\n    var type = menu.type,\n        path = menu.path;\n\n    if (path && path !== currentMenuPath) {\n      // 如果不是组件子类，则直接跳转到其他页面\n      if (type !== MenuTypeEnum.name) {\n        history.push(path);\n        return;\n      }\n\n      if (menu.component) {\n        currentComponentRef.current = /*#__PURE__*/React.createElement(menu.component[\"default\"]);\n      } else {\n        currentComponentRef.current = null;\n      }\n\n      setCurrentMenuPath(path);\n    }\n  };\n\n  useEffect(function () {\n    if (firstMenuItem) {\n      selectMenu(null, firstMenuItem);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"component-box\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-menu\"\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"container\"\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"menu-inline\"\n  }, Array.isArray(route) && route.map(function (item, index) {\n    if (item.type !== MenuTypeEnum.name) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"\".concat(item.name).concat(index),\n        className: menuItemClassName(item),\n        onClick: function onClick(e) {\n          selectMenu(e, item);\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text\"\n      }, item.name));\n    }\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: menuItemClassName(item),\n      key: \"\".concat(item.name).concat(index),\n      onClick: function onClick(e) {\n        selectMenu(e, item);\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text\"\n    }, item.name));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-content\"\n  }, currentComponentRef.current));\n}\n\n_s(Component, \"DPAg0IXXQbRHnw8aQqvj0cpn27k=\");\n\n_c = Component;\nexport default Component;\n\nvar _c;\n\n$RefreshReg$(_c, \"Component\");","map":{"version":3,"sources":["D:/self/develop/selfComponents/src/pages/component/index/index.tsx"],"names":["React","useEffect","useRef","useState","menuList","MenuTypeEnum","classnames","history","route","firstMenuItem","addRoute","menu","parentMenu","type","name","groupName","Array","isArray","children","length","groupTypeName","menuItemData","path","component","push","forEach","item","Component","props","currentMenuPath","setCurrentMenuPath","currentComponentRef","menuItemClassName","selectMenu","e","current","createElement","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./index.less\";\r\nimport menuList from \"./menuConfig\";\r\nimport { MenuItemObject, MenuTypeEnum } from \"./type\";\r\nimport classnames from \"classnames\";\r\nimport history from \"../../../history\";\r\n\r\n//处理菜单\r\nlet route = [];\r\nlet firstMenuItem: MenuItemObject | null = null;\r\nconst addRoute: (\r\n    menu: MenuItemObject,\r\n    parentMenu: null | MenuItemObject\r\n) => void = (menu, parentMenu) => {\r\n    let type: MenuTypeEnum | string = \"\";\r\n    if (menu.name) {\r\n        if (!parentMenu) {\r\n            type = MenuTypeEnum.groupName;\r\n        } else if (Array.isArray(menu.children) && menu.children.length > 0) {\r\n            type = MenuTypeEnum.groupTypeName;\r\n        } else {\r\n            type = MenuTypeEnum.name;\r\n        }\r\n        const menuItemData = {\r\n            type,\r\n            name: menu.name,\r\n            path: menu.path,\r\n            component: menu.component,\r\n        };\r\n        if (\r\n            type === MenuTypeEnum.name &&\r\n            !firstMenuItem &&\r\n            menu.component &&\r\n            menu.path\r\n        ) {\r\n            firstMenuItem = menuItemData;\r\n        }\r\n        route.push(menuItemData);\r\n    }\r\n    if (Array.isArray(menu.children) && menu.children.length > 0) {\r\n        menu.children.forEach((item) => {\r\n            addRoute(item, menu);\r\n        });\r\n    }\r\n};\r\n\r\nArray.isArray(menuList) &&\r\n    menuList.forEach((menu) => {\r\n        addRoute(menu, null);\r\n    });\r\n\r\nfunction Component(props) {\r\n    const [currentMenuPath, setCurrentMenuPath] = useState(\"\"); // 当前菜单Path\r\n    const currentComponentRef = useRef(null);\r\n\r\n    // 具体菜单的样式\r\n    const menuItemClassName: (menu: MenuItemObject) => Object = (item) => {\r\n        const { type, path } = item;\r\n        return classnames(\"menu-item\", {\r\n            [`menu-item-${type}`]: type,\r\n            [`menu-item-click`]: path,\r\n            [`menu-item-current`]: path === currentMenuPath,\r\n        });\r\n    };\r\n\r\n    const selectMenu: (e: any, menu: MenuItemObject) => void = (e, menu) => {\r\n        const { type, path } = menu;\r\n        if (path && path !== currentMenuPath) {\r\n            // 如果不是组件子类，则直接跳转到其他页面\r\n            if (type !== MenuTypeEnum.name) {\r\n                history.push(path);\r\n                return;\r\n            }\r\n            if (menu.component) {\r\n                currentComponentRef.current = React.createElement(\r\n                    menu.component.default\r\n                );\r\n            } else {\r\n                currentComponentRef.current = null;\r\n            }\r\n\r\n            setCurrentMenuPath(path);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstMenuItem) {\r\n            selectMenu(null, firstMenuItem);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"component-box\">\r\n            <div className=\"left-menu\">\r\n                <section className=\"container\">\r\n                    <ul className=\"menu-inline\">\r\n                        {Array.isArray(route) &&\r\n                            route.map((item, index) => {\r\n                                if (item.type !== MenuTypeEnum.name) {\r\n                                    return (\r\n                                        <div\r\n                                            key={`${item.name}${index}`}\r\n                                            className={menuItemClassName(item)}\r\n                                            onClick={(e) => {\r\n                                                selectMenu(e, item);\r\n                                            }}\r\n                                        >\r\n                                            <span className=\"text\">\r\n                                                {item.name}\r\n                                            </span>\r\n                                        </div>\r\n                                    );\r\n                                }\r\n                                return (\r\n                                    <li\r\n                                        className={menuItemClassName(item)}\r\n                                        key={`${item.name}${index}`}\r\n                                        onClick={(e) => {\r\n                                            selectMenu(e, item);\r\n                                        }}\r\n                                    >\r\n                                        <span className=\"text\">\r\n                                            {item.name}\r\n                                        </span>\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                    </ul>\r\n                </section>\r\n            </div>\r\n            <div className=\"right-content\">{currentComponentRef.current}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Component;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./index.less\";\nimport menuList from \"./menuConfig\";\nimport { MenuTypeEnum } from \"./type\";\nimport classnames from \"classnames\";\nimport history from \"../../../history\"; //处理菜单\n\nvar route = [];\nvar firstMenuItem = null;\n\nvar addRoute = function addRoute(menu, parentMenu) {\n  var type = \"\";\n\n  if (menu.name) {\n    if (!parentMenu) {\n      type = MenuTypeEnum.groupName;\n    } else if (Array.isArray(menu.children) && menu.children.length > 0) {\n      type = MenuTypeEnum.groupTypeName;\n    } else {\n      type = MenuTypeEnum.name;\n    }\n\n    var menuItemData = {\n      type: type,\n      name: menu.name,\n      path: menu.path,\n      component: menu.component\n    };\n\n    if (type === MenuTypeEnum.name && !firstMenuItem && menu.component && menu.path) {\n      firstMenuItem = menuItemData;\n    }\n\n    route.push(menuItemData);\n  }\n\n  if (Array.isArray(menu.children) && menu.children.length > 0) {\n    menu.children.forEach(function (item) {\n      addRoute(item, menu);\n    });\n  }\n};\n\nArray.isArray(menuList) && menuList.forEach(function (menu) {\n  addRoute(menu, null);\n});\n\nfunction Component(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentMenuPath = _useState2[0],\n      setCurrentMenuPath = _useState2[1]; // 当前菜单Path\n\n\n  var currentComponentRef = useRef(null); // 具体菜单的样式\n\n  var menuItemClassName = function menuItemClassName(item) {\n    var _classnames;\n\n    var type = item.type,\n        path = item.path;\n    return classnames(\"menu-item\", (_classnames = {}, _defineProperty(_classnames, \"menu-item-\".concat(type), type), _defineProperty(_classnames, \"menu-item-click\", path), _defineProperty(_classnames, \"menu-item-current\", path === currentMenuPath), _classnames));\n  };\n\n  var selectMenu = function selectMenu(e, menu) {\n    var type = menu.type,\n        path = menu.path;\n\n    if (path && path !== currentMenuPath) {\n      // 如果不是组件子类，则直接跳转到其他页面\n      if (type !== MenuTypeEnum.name) {\n        history.push(path);\n        return;\n      }\n\n      if (menu.component) {\n        currentComponentRef.current = /*#__PURE__*/React.createElement(menu.component[\"default\"]);\n      } else {\n        currentComponentRef.current = null;\n      }\n\n      setCurrentMenuPath(path);\n    }\n  };\n\n  useEffect(function () {\n    if (firstMenuItem) {\n      selectMenu(null, firstMenuItem);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"component-box\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-menu\"\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"container\"\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"menu-inline\"\n  }, Array.isArray(route) && route.map(function (item, index) {\n    if (item.type !== MenuTypeEnum.name) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"\".concat(item.name).concat(index),\n        className: menuItemClassName(item),\n        onClick: function onClick(e) {\n          selectMenu(e, item);\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text\"\n      }, item.name));\n    }\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: menuItemClassName(item),\n      key: \"\".concat(item.name).concat(index),\n      onClick: function onClick(e) {\n        selectMenu(e, item);\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text\"\n    }, item.name));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-content\"\n  }, currentComponentRef.current));\n}\n\nexport default Component;","map":{"version":3,"sources":["D:/self/develop/selfComponents/src/pages/component/index/index.tsx"],"names":["route","firstMenuItem","addRoute","type","menu","MenuTypeEnum","Array","menuItemData","name","path","component","currentMenuPath","setCurrentMenuPath","useState","currentComponentRef","useRef","menuItemClassName","item","classnames","selectMenu","history","React","useEffect"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./index.less\";\r\nimport menuList from \"./menuConfig\";\r\nimport { MenuItemObject, MenuTypeEnum } from \"./type\";\r\nimport classnames from \"classnames\";\r\nimport history from \"../../../history\";\r\n\r\n//处理菜单\r\nlet route = [];\r\nlet firstMenuItem: MenuItemObject | null = null;\r\nconst addRoute: (\r\n    menu: MenuItemObject,\r\n    parentMenu: null | MenuItemObject\r\n) => void = (menu, parentMenu) => {\r\n    let type: MenuTypeEnum | string = \"\";\r\n    if (menu.name) {\r\n        if (!parentMenu) {\r\n            type = MenuTypeEnum.groupName;\r\n        } else if (Array.isArray(menu.children) && menu.children.length > 0) {\r\n            type = MenuTypeEnum.groupTypeName;\r\n        } else {\r\n            type = MenuTypeEnum.name;\r\n        }\r\n        const menuItemData = {\r\n            type,\r\n            name: menu.name,\r\n            path: menu.path,\r\n            component: menu.component,\r\n        };\r\n        if (\r\n            type === MenuTypeEnum.name &&\r\n            !firstMenuItem &&\r\n            menu.component &&\r\n            menu.path\r\n        ) {\r\n            firstMenuItem = menuItemData;\r\n        }\r\n        route.push(menuItemData);\r\n    }\r\n    if (Array.isArray(menu.children) && menu.children.length > 0) {\r\n        menu.children.forEach((item) => {\r\n            addRoute(item, menu);\r\n        });\r\n    }\r\n};\r\n\r\nArray.isArray(menuList) &&\r\n    menuList.forEach((menu) => {\r\n        addRoute(menu, null);\r\n    });\r\n\r\nfunction Component(props) {\r\n    const [currentMenuPath, setCurrentMenuPath] = useState(\"\"); // 当前菜单Path\r\n    const currentComponentRef = useRef(null);\r\n\r\n    // 具体菜单的样式\r\n    const menuItemClassName: (menu: MenuItemObject) => Object = (item) => {\r\n        const { type, path } = item;\r\n        return classnames(\"menu-item\", {\r\n            [`menu-item-${type}`]: type,\r\n            [`menu-item-click`]: path,\r\n            [`menu-item-current`]: path === currentMenuPath,\r\n        });\r\n    };\r\n\r\n    const selectMenu: (e: any, menu: MenuItemObject) => void = (e, menu) => {\r\n        const { type, path } = menu;\r\n        if (path && path !== currentMenuPath) {\r\n            // 如果不是组件子类，则直接跳转到其他页面\r\n            if (type !== MenuTypeEnum.name) {\r\n                history.push(path);\r\n                return;\r\n            }\r\n            if (menu.component) {\r\n                currentComponentRef.current = React.createElement(\r\n                    menu.component.default\r\n                );\r\n            } else {\r\n                currentComponentRef.current = null;\r\n            }\r\n\r\n            setCurrentMenuPath(path);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (firstMenuItem) {\r\n            selectMenu(null, firstMenuItem);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"component-box\">\r\n            <div className=\"left-menu\">\r\n                <section className=\"container\">\r\n                    <ul className=\"menu-inline\">\r\n                        {Array.isArray(route) &&\r\n                            route.map((item, index) => {\r\n                                if (item.type !== MenuTypeEnum.name) {\r\n                                    return (\r\n                                        <div\r\n                                            key={`${item.name}${index}`}\r\n                                            className={menuItemClassName(item)}\r\n                                            onClick={(e) => {\r\n                                                selectMenu(e, item);\r\n                                            }}\r\n                                        >\r\n                                            <span className=\"text\">\r\n                                                {item.name}\r\n                                            </span>\r\n                                        </div>\r\n                                    );\r\n                                }\r\n                                return (\r\n                                    <li\r\n                                        className={menuItemClassName(item)}\r\n                                        key={`${item.name}${index}`}\r\n                                        onClick={(e) => {\r\n                                            selectMenu(e, item);\r\n                                        }}\r\n                                    >\r\n                                        <span className=\"text\">\r\n                                            {item.name}\r\n                                        </span>\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                    </ul>\r\n                </section>\r\n            </div>\r\n            <div className=\"right-content\">{currentComponentRef.current}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Component;\r\n"]},"metadata":{},"sourceType":"module"}